[{"C:\\Projetos\\React\\Project_Weather_Forecast\\climate_app\\src\\index.js":"1","C:\\Projetos\\React\\Project_Weather_Forecast\\climate_app\\src\\App.js":"2","C:\\Projetos\\React\\Project_Weather_Forecast\\climate_app\\src\\reportWebVitals.js":"3","C:\\Projetos\\React\\Project_Weather_Forecast\\climate_app\\src\\components\\SearchContainer.js":"4","C:\\Projetos\\React\\Project_Weather_Forecast\\climate_app\\src\\components\\ClimateBackground.js":"5","C:\\Projetos\\React\\Project_Weather_Forecast\\climate_app\\src\\components\\RainParticlesOptions.js.js":"6","C:\\Projetos\\React\\Project_Weather_Forecast\\climate_app\\src\\components\\SnowParticlesOptions.js":"7","C:\\Projetos\\React\\Project_Weather_Forecast\\climate_app\\src\\App.test.js":"8"},{"size":331,"mtime":1678362860076,"results":"9","hashOfConfig":"10"},{"size":286,"mtime":1678555175197,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1678074980092,"results":"12","hashOfConfig":"10"},{"size":3241,"mtime":1678367138887,"results":"13","hashOfConfig":"10"},{"size":10418,"mtime":1678558198491,"results":"14","hashOfConfig":"10"},{"size":3861,"mtime":1678555616969,"results":"15","hashOfConfig":"10"},{"size":2093,"mtime":1678365965147,"results":"16","hashOfConfig":"10"},{"size":246,"mtime":1678074979925,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"u3r34b",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Projetos\\React\\Project_Weather_Forecast\\climate_app\\src\\index.js",[],[],"C:\\Projetos\\React\\Project_Weather_Forecast\\climate_app\\src\\App.js",[],[],"C:\\Projetos\\React\\Project_Weather_Forecast\\climate_app\\src\\reportWebVitals.js",[],[],[],"C:\\Projetos\\React\\Project_Weather_Forecast\\climate_app\\src\\components\\SearchContainer.js",[],[],"C:\\Projetos\\React\\Project_Weather_Forecast\\climate_app\\src\\components\\ClimateBackground.js",["44"],[],"import { useState, useEffect } from \"react\";\r\n\r\nimport { useCallback } from \"react\";\r\nimport Particles from \"react-particles\";\r\nimport { loadFull } from \"tsparticles\";\r\nimport RainParticleOption from \"./RainParticlesOptions.js\";\r\nimport SnowParticleOption from \"./SnowParticlesOptions.js\";\r\n\r\nimport TranspImg from \"../imagens/Fundo_transparente.png\";\r\n\r\nimport BlackCloud from \"../imagens/Nublado.png\";\r\nimport whiteCloud from \"../imagens/Nuvem_Clara.png\"\r\nimport thunderstormCloud from \"../imagens/Nuvem_trovoada.png\"\r\n\r\nimport Sun from \"../imagens/Sol.png\";\r\nimport Moon from \"../imagens/Lua.png\";\r\n\r\nconst ClimateBackground = ({ weatherForcast }) => {\r\n\r\n  const [stylebackground, setstylebackground] = useState(\"BackgroundDefault\")\r\n  const [isDay, setIsDay] = useState(true);\r\n  const [climate, setClimate] = useState(null);\r\n  const [imgOneCloud, setImgOneCloud] = useState(TranspImg);\r\n  const [imgTwoCloud, setImgTwoCloud] = useState(TranspImg);\r\n  const [imgThreeCloud, setImgThreeCloud] = useState(TranspImg);\r\n  const [imgSunAndMoon, setImgSunAndMoon] = useState(TranspImg);\r\n\r\n  const RainParticleOptions = RainParticleOption();\r\n  const SnowParticleOptions = SnowParticleOption();\r\n\r\n\r\n  console.log(climate)\r\n  //Define as configurações para a produção de partículas\r\n  //níveis de particula\r\n  const levelZeroParticles = 0;\r\n  const levelOneParticles = 100;\r\n  const levelTwoParticles = 300;\r\n  const levelThreeParticles = 500;\r\n  const levelFourParticles = 700;\r\n\r\n  const [rainLevel, setRainLevel] = useState(levelZeroParticles)\r\n  const [snowLevel, setSnowLevel] = useState(levelZeroParticles)\r\n\r\n  //Define as particulas options de chuva\r\n  const NewRainParticleOptions = Object.assign({}, RainParticleOptions);\r\n  NewRainParticleOptions.particles.number.value = rainLevel\r\n\r\n  const NewSnowParticleOptions = Object.assign({}, SnowParticleOptions);\r\n  NewSnowParticleOptions.particles.number.value = snowLevel\r\n\r\n  const particlesInit = useCallback(async engine => {\r\n    console.log(engine);\r\n    await loadFull(engine);\r\n  }, []);\r\n\r\n  const particlesLoaded = useCallback(async container => {\r\n    await console.log(container);\r\n  }, []);\r\n\r\n  //\r\n\r\n  //set a string do climate\r\n  useEffect(() => {\r\n    setClimate(weatherForcast?.current?.condition?.text)\r\n  }, [weatherForcast]);\r\n\r\n\r\n  //vê se ma região está noite, dia ou null\r\n  useEffect(() => {\r\n    if (weatherForcast && weatherForcast.current.is_day === 0) {\r\n      setIsDay(0);\r\n    } else if (weatherForcast && weatherForcast.current.is_day === 1) {\r\n      setIsDay(1)\r\n    } else {\r\n      setIsDay(2)\r\n    }\r\n\r\n  }, [weatherForcast]);\r\n\r\n  //muda o Background e imagem do sol e da lua\r\n  const DayOrNight = () => {\r\n    if (isDay === 1) {\r\n      setstylebackground(\"BackgroundDay\");\r\n      setImgSunAndMoon(Sun)\r\n    } else if (isDay === 0) {\r\n      setstylebackground(\"BackgroundNight\");\r\n      setImgSunAndMoon(Moon)\r\n    } else {\r\n      setstylebackground(\"BackgroundDefault\");\r\n      setImgSunAndMoon(TranspImg)\r\n    }\r\n  }\r\n\r\n  //Muda as imagens a quantidade de particua e o fundo dependendo do clima \r\n  useEffect(() => {\r\n    //1\r\n    if (climate === \"Céu limpo\" || climate === \"Sol\") {\r\n      setImgOneCloud(TranspImg);\r\n      setImgTwoCloud(TranspImg);\r\n      setImgThreeCloud(TranspImg);\r\n      DayOrNight();\r\n      setRainLevel(levelZeroParticles);\r\n      setSnowLevel(levelZeroParticles);\r\n\r\n\r\n    }\r\n    //2\r\n    else if (climate === \"Parcialmente nublado\" || climate === \"Encoberto\") {\r\n      setImgOneCloud(TranspImg);\r\n      setImgTwoCloud(TranspImg);\r\n      setImgThreeCloud(whiteCloud);\r\n      DayOrNight();\r\n      setRainLevel(levelZeroParticles)\r\n      setSnowLevel(levelZeroParticles);\r\n    }\r\n    else if (climate === \"Nublado\" || climate === \"Possibilidade de chuva irregular\" || climate === \"Possibilidade de chuva\" || climate === \"Possibilidade de neve irregular\" || climate === \"Possibilidade de neve molhada irregular\" || climate === \"Possibilidade de chuvisco gelado irregular\" || climate === \"Possibilidade de trovoada\") {\r\n\r\n      setImgOneCloud(BlackCloud);\r\n      setImgTwoCloud(BlackCloud);\r\n      setImgThreeCloud(BlackCloud);\r\n      DayOrNight();\r\n      setstylebackground(\"BackgroundGreyDay\");\r\n      setRainLevel(levelZeroParticles);\r\n      setSnowLevel(levelZeroParticles);\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n    else if (climate === \"Neblina\" || climate === \"Nevoeiro\" || climate === \"Nevoeiro gelado\" || climate === \"Nevasca\") {\r\n      setImgOneCloud(BlackCloud);\r\n      setImgTwoCloud(TranspImg);\r\n      setImgThreeCloud(whiteCloud);\r\n      DayOrNight();\r\n      setstylebackground(\"BackgroundGreyDay\");\r\n      setRainLevel(levelZeroParticles);\r\n      setSnowLevel(levelZeroParticles);\r\n\r\n\r\n    }\r\n    else if (climate === \"Rajadas de vento com neve\") {\r\n      setImgOneCloud(whiteCloud);\r\n      setImgTwoCloud(whiteCloud);\r\n      setImgThreeCloud(whiteCloud);\r\n      DayOrNight();\r\n      setstylebackground(\"BackgroundGreyDay\");\r\n      setRainLevel(levelZeroParticles)\r\n      setSnowLevel(levelOneParticles);\r\n\r\n    }\r\n    else if (climate === \"Chuva moderada\"||climate === \"Chuvisco irregular\" || climate === \"Chuvisco de chuva irregular\" || climate === \"Chuvisco gelado\" || climate === \"Chuvisco forte gelado\" || climate === \"Chuva fraca irregular\" || climate === \"Chuva fraca\" || climate === \"Períodos de chuva moderadamente\" || climate === \"Chuva fraca e gelada\" || climate === \"Aguaceiros fracos\" || climate === \"Aguaceiros flexíveis\" || climate === \"Períodos de chuva moderada\" || climate === \"Chuvisco\") {\r\n\r\n      setImgOneCloud(BlackCloud);\r\n      setImgTwoCloud(BlackCloud);\r\n      setImgThreeCloud(BlackCloud);\r\n      DayOrNight();\r\n      setstylebackground(\"BackgroundGreyDay\");\r\n      setRainLevel(levelTwoParticles)\r\n      setSnowLevel(levelZeroParticles);\r\n\r\n\r\n\r\n    }\r\n    else if (climate === \"Chuvisco forte gelado\") {\r\n      setImgOneCloud(BlackCloud);\r\n      setImgTwoCloud(BlackCloud);\r\n      setImgThreeCloud(BlackCloud);\r\n      DayOrNight();\r\n      setstylebackground(\"BackgroundGreyDay\");\r\n      setRainLevel(levelThreeParticles)\r\n      setSnowLevel(levelZeroParticles);\r\n\r\n    }\r\n    else if (climate === \"Chuva pesada\" || climate === \"Períodos de chuva forte\" || climate === \"Chuva forte\" || climate === \"Chuva gelada moderada ou forte\" || climate === \"Chuva torrencial\" || climate === \"Aguaceiros moderados ou fortes\") {\r\n\r\n      setImgOneCloud(BlackCloud);\r\n      setImgTwoCloud(BlackCloud);\r\n      setImgThreeCloud(BlackCloud);\r\n      DayOrNight();\r\n      setstylebackground(\"BackgroundGreyDay\");\r\n      setRainLevel(levelFourParticles)\r\n      setSnowLevel(levelZeroParticles);\r\n\r\n\r\n    }\r\n    else if (climate === \"Chuva fraca com neve\" || climate === \"Aguaceiros fracos com neve\") {\r\n      setImgOneCloud(whiteCloud);\r\n      setImgTwoCloud(BlackCloud);\r\n      setImgThreeCloud(whiteCloud);\r\n      DayOrNight();\r\n      setstylebackground(\"BackgroundGreyDay\");\r\n      setRainLevel(levelOneParticles)\r\n      setSnowLevel(levelOneParticles);\r\n    }\r\n    else if (climate === \"Chuva forte ou moderadamente com neve\" || climate === \"Aguaceiros moderados ou fortes com neve\") {\r\n      setImgOneCloud(BlackCloud);\r\n      setImgTwoCloud(BlackCloud);\r\n      setImgThreeCloud(BlackCloud);\r\n      DayOrNight();\r\n      setstylebackground(\"BackgroundGreyDay\");\r\n      setRainLevel(levelTwoParticles)\r\n      setSnowLevel(levelTwoParticles);\r\n    }\r\n    else if (climate === \"Queda de neve irregular e fraca\" || climate === \"Queda de neve fraca\" || climate === \"Queda de neve moderada e irregular\" || climate === \"Queda de neve moderada\" || climate === \"Queda de neve forte e irregular\") {\r\n\r\n      setImgOneCloud(BlackCloud);\r\n      setImgTwoCloud(BlackCloud);\r\n      setImgThreeCloud(BlackCloud);\r\n      DayOrNight();\r\n      setstylebackground(\"BackgroundGreyDay\");\r\n      setRainLevel(levelZeroParticles)\r\n      setSnowLevel(levelTwoParticles);\r\n\r\n\r\n    }\r\n    else if (climate === \"Neve intensa\") {\r\n      setImgOneCloud(whiteCloud);\r\n      setImgTwoCloud(BlackCloud);\r\n      setImgThreeCloud(whiteCloud);\r\n      DayOrNight();\r\n      setstylebackground(\"BackgroundGreyDay\");\r\n      setRainLevel(levelZeroParticles)\r\n      setSnowLevel(levelFourParticles);\r\n    }\r\n    else if (climate === \"Granizo\" || climate === \"Aguaceiros fracos com granizo\" || climate === \"Aguaceiros moderados ou fortes com granizo\") {\r\n\r\n      setImgOneCloud(BlackCloud);\r\n      setImgTwoCloud(BlackCloud);\r\n      setImgThreeCloud(BlackCloud);\r\n      DayOrNight();\r\n      setstylebackground(\"BackgroundGreyDay\");\r\n      setRainLevel(levelOneParticles)\r\n      setSnowLevel(levelZeroParticles);\r\n\r\n    }\r\n    else if (climate === \"Chuva fraca irregular com trovoada\" || climate === \"Chuva moderada ou forte com trovoada\") {\r\n      setImgOneCloud(thunderstormCloud);\r\n      setImgTwoCloud(BlackCloud);\r\n      setImgThreeCloud(thunderstormCloud);\r\n      DayOrNight();\r\n      setstylebackground(\"BackgroundGreyDay\");\r\n      setRainLevel(levelThreeParticles)\r\n      setSnowLevel(levelZeroParticles)\r\n\r\n    }\r\n    else if (climate === \"Neve fraca irregular com trovoada\" || climate === \"Neve moderada ou forte com trovoada\") {\r\n      setImgOneCloud(BlackCloud);\r\n      setImgTwoCloud(thunderstormCloud);\r\n      setImgThreeCloud(BlackCloud);\r\n      DayOrNight();\r\n      setstylebackground(\"BackgroundGreyDay\");\r\n      setRainLevel(levelZeroParticles);\r\n      setRainLevel(levelThreeParticles)\r\n    }\r\n    else {\r\n      setImgOneCloud(TranspImg);\r\n      setImgTwoCloud(TranspImg);\r\n      setImgThreeCloud(TranspImg);\r\n      setSnowLevel(levelZeroParticles);\r\n      setRainLevel(levelZeroParticles);\r\n      DayOrNight();\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n  }, [climate]);\r\n\r\n  console.log(climate)\r\n  return (\r\n    <>\r\n\r\n      <Particles\r\n        id=\"tsRainparticles\"\r\n        init={particlesInit}\r\n        loaded={particlesLoaded}\r\n        options={NewRainParticleOptions}\r\n      />\r\n      <Particles\r\n        id=\"tsSnowparticles\"\r\n        init={particlesInit}\r\n        loaded={particlesLoaded}\r\n        options={NewSnowParticleOptions}\r\n      />\r\n\r\n\r\n\r\n\r\n      <div className={stylebackground}>\r\n        <img className=\"OneCloud\" src={imgOneCloud} alt=\"\"/>\r\n        <img className=\"TwoCloud\" src={imgTwoCloud} alt=\"\" />\r\n        <img className=\"ThreeCloud\" src={imgThreeCloud} alt=\"\" />\r\n        <img className=\"SunAndMoon\" src={imgSunAndMoon} alt=\"\" />\r\n      </div>\r\n    </>\r\n\r\n  )\r\n}\r\nexport default ClimateBackground;\r\n\r\n\r\n","C:\\Projetos\\React\\Project_Weather_Forecast\\climate_app\\src\\components\\RainParticlesOptions.js.js",[],[],"C:\\Projetos\\React\\Project_Weather_Forecast\\climate_app\\src\\components\\SnowParticlesOptions.js",[],[],"C:\\Projetos\\React\\Project_Weather_Forecast\\climate_app\\src\\App.test.js",[],[],{"ruleId":"45","severity":1,"message":"46","line":269,"column":6,"nodeType":"47","endLine":269,"endColumn":15,"suggestions":"48"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'DayOrNight'. Either include it or remove the dependency array.","ArrayExpression",["49"],{"desc":"50","fix":"51"},"Update the dependencies array to be: [DayOrNight, climate]",{"range":"52","text":"53"},[9635,9644],"[DayOrNight, climate]"]