{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projetos\\\\React\\\\Project_Weather_Forecast\\\\climate_app\\\\src\\\\components\\\\ClimateBackground.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useCallback } from \"react\";\nimport Particles from \"react-particles\";\nimport { loadFull } from \"tsparticles\";\nimport RainParticleOption from \"./RainParticlesOptions.js\";\nimport SnowParticleOption from \"./SnowParticlesOptions.js\";\nimport TranspImg from \"../imagens/Fundo_transparente.png\";\nimport BlackCloud from \"../imagens/Nublado.png\";\nimport whiteCloud from \"../imagens/Nuvem_Clara.png\";\nimport thunderstormCloud from \"../imagens/Nuvem_trovoada.png\";\nimport Sun from \"../imagens/Sol.png\";\nimport Moon from \"../imagens/Lua.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ClimateBackground = _ref => {\n  _s();\n  let {\n    weatherForcast\n  } = _ref;\n  const [stylebackground, setstylebackground] = useState(\"BackgroundDefault\");\n  const [isDay, setIsDay] = useState(true);\n  const [climate, setClimate] = useState(null);\n  const [imgOneCloud, setImgOneCloud] = useState(TranspImg);\n  const [imgTwoCloud, setImgTwoCloud] = useState(TranspImg);\n  const [imgThreeCloud, setImgThreeCloud] = useState(TranspImg);\n  const [imgSunAndMoon, setImgSunAndMoon] = useState(TranspImg);\n  //passa pelas duas primeiras condições de mudança do fundo caso esteja em false\n  const [isExecutedDayorNight, setIsExecutedDayorNight] = useState(false);\n  const RainParticleOptions = RainParticleOption();\n  const SnowParticleOptions = SnowParticleOption();\n  console.log(climate);\n  //Define as configurações para a produção de partículas\n  //níveis de particula\n  const levelZeroParticles = 0;\n  const levelOneParticles = 100;\n  const levelTwoParticles = 300;\n  const levelThreeParticles = 500;\n  const levelFourParticles = 700;\n  const [rainLevel, setRainLevel] = useState(levelZeroParticles);\n  const [snowLevel, setSnowLevel] = useState(levelZeroParticles);\n\n  //Define as particulas options de chuva\n  const NewRainParticleOptions = Object.assign({}, RainParticleOptions);\n  NewRainParticleOptions.particles.number.value = rainLevel;\n  const NewSnowParticleOptions = Object.assign({}, SnowParticleOptions);\n  NewSnowParticleOptions.particles.number.value = snowLevel;\n  const particlesInit = useCallback(async engine => {\n    console.log(engine);\n    await loadFull(engine);\n  }, []);\n  const particlesLoaded = useCallback(async container => {\n    await console.log(container);\n  }, []);\n\n  //\n\n  //set a string do climate\n  useEffect(() => {\n    var _weatherForcast$curre, _weatherForcast$curre2;\n    setClimate(weatherForcast === null || weatherForcast === void 0 ? void 0 : (_weatherForcast$curre = weatherForcast.current) === null || _weatherForcast$curre === void 0 ? void 0 : (_weatherForcast$curre2 = _weatherForcast$curre.condition) === null || _weatherForcast$curre2 === void 0 ? void 0 : _weatherForcast$curre2.text);\n  }, [weatherForcast]);\n\n  //vê se ma região está noite, dia ou null\n  useEffect(() => {\n    if (weatherForcast && weatherForcast.current.is_day === 0) {\n      setIsDay(0);\n    } else if (weatherForcast && weatherForcast.current.is_day === 1) {\n      setIsDay(1);\n    } else {\n      setIsDay(2);\n    }\n  }, [weatherForcast]);\n\n  //muda o Background e imagem do sol e da lua\n  const DayOrNight = () => {\n    if (isDay === 1) {\n      setstylebackground(\"BackgroundDay\");\n      setImgSunAndMoon(Sun);\n    } else if (isDay === 0) {\n      setstylebackground(\"BackgroundNight\");\n      setImgSunAndMoon(Moon);\n    } else {\n      setstylebackground(\"BackgroundDefault\");\n      setImgSunAndMoon(TranspImg);\n    }\n  };\n\n  //Muda as imagens a quantidade de particua e o fundo dependendo do clima \n  useEffect(() => {\n    //1\n    if (climate === \"Céu limpo\" || climate === \"Sol\") {\n      setImgOneCloud(TranspImg);\n      setImgTwoCloud(TranspImg);\n      setImgThreeCloud(TranspImg);\n      DayOrNight();\n      setRainLevel(levelZeroParticles);\n      setSnowLevel(levelZeroParticles);\n    }\n    //2\n    else if (climate === \"Parcialmente nublado\" || climate === \"Encoberto\") {\n      setImgOneCloud(whiteCloud);\n      setImgTwoCloud(whiteCloud);\n      setImgThreeCloud(whiteCloud);\n      DayOrNight();\n      setRainLevel(levelZeroParticles);\n      setSnowLevel(levelZeroParticles);\n    } else if (climate === \"Nublado\" || climate === \"Possibilidade de chuva irregular\" || climate === \"Possibilidade de chuva\" || climate === \"Possibilidade de neve irregular\" || climate === \"Possibilidade de neve molhada irregular\" || climate === \"Possibilidade de chuvisco gelado irregular\" || climate === \"Possibilidade de trovoada\") {\n      setImgOneCloud(BlackCloud);\n      setImgTwoCloud(BlackCloud);\n      setImgThreeCloud(BlackCloud);\n      DayOrNight();\n      setstylebackground(\"BackgroundGreyDay\");\n      setRainLevel(levelZeroParticles);\n      setSnowLevel(levelZeroParticles);\n    } else if (climate === \"Neblina\" || climate === \"Nevoeiro\" || climate === \"Nevoeiro gelado\" || climate === \"Nevasca\") {\n      setImgOneCloud(BlackCloud);\n      setImgTwoCloud(TranspImg);\n      setImgThreeCloud(whiteCloud);\n      DayOrNight();\n      setstylebackground(\"BackgroundGreyDay\");\n      setRainLevel(levelZeroParticles);\n      setSnowLevel(levelZeroParticles);\n    } else if (climate === \"Rajadas de vento com neve\") {\n      setImgOneCloud(whiteCloud);\n      setImgTwoCloud(whiteCloud);\n      setImgThreeCloud(whiteCloud);\n      DayOrNight();\n      setstylebackground(\"BackgroundGreyDay\");\n      setRainLevel(levelZeroParticles);\n      setSnowLevel(levelOneParticles);\n    } else if (climate === \"Chuvisco irregular\" || climate === \"Chuvisco de chuva irregular\" || climate === \"Chuvisco gelado\" || climate === \"Chuvisco forte gelado\" || climate === \"Chuva fraca irregular\" || climate === \"Chuva fraca\" || climate === \"Períodos de chuva moderadamente\" || climate === \"Chuva fraca e gelada\" || climate === \"Aguaceiros fracos\" || climate === \"Aguaceiros flexíveis\" || climate === \"Períodos de chuva moderada\") {\n      setImgOneCloud(BlackCloud);\n      setImgTwoCloud(BlackCloud);\n      setImgThreeCloud(BlackCloud);\n      DayOrNight();\n      setstylebackground(\"BackgroundGreyDay\");\n      setRainLevel(levelOneParticles);\n      setSnowLevel(levelZeroParticles);\n    } else if (climate === \"Chuvisco forte gelado\") {\n      setImgOneCloud(BlackCloud);\n      setImgTwoCloud(BlackCloud);\n      setImgThreeCloud(BlackCloud);\n      DayOrNight();\n      setstylebackground(\"BackgroundGreyDay\");\n      setRainLevel(levelThreeParticles);\n      setSnowLevel(levelZeroParticles);\n    } else if (climate === \"Chuva pesada\" || climate === \"Períodos de chuva forte\" || climate === \"Chuva forte\" || climate === \"Chuva gelada moderada ou forte\" || climate === \"Chuva torrencial\" || climate === \"Aguaceiros moderados ou fortes\") {\n      setImgOneCloud(BlackCloud);\n      setImgTwoCloud(BlackCloud);\n      setImgThreeCloud(BlackCloud);\n      DayOrNight();\n      setstylebackground(\"BackgroundGreyDay\");\n      setRainLevel(levelFourParticles);\n      setSnowLevel(levelZeroParticles);\n    } else if (climate === \"Chuva fraca com neve\" || climate === \"Aguaceiros fracos com neve\") {\n      setImgOneCloud(whiteCloud);\n      setImgTwoCloud(BlackCloud);\n      setImgThreeCloud(whiteCloud);\n      DayOrNight();\n      setstylebackground(\"BackgroundGreyDay\");\n      setRainLevel(levelOneParticles);\n      setSnowLevel(levelOneParticles);\n    } else if (climate === \"Chuva forte ou moderadamente com neve\" || climate === \"Aguaceiros moderados ou fortes com neve\") {\n      setImgOneCloud(BlackCloud);\n      setImgTwoCloud(BlackCloud);\n      setImgThreeCloud(BlackCloud);\n      DayOrNight();\n      setstylebackground(\"BackgroundGreyDay\");\n      setRainLevel(levelTwoParticles);\n      setSnowLevel(levelTwoParticles);\n    } else if (climate === \"Queda de neve irregular e fraca\" || climate === \"Queda de neve fraca\" || climate === \"Queda de neve moderada e irregular\" || climate === \"Queda de neve moderada\" || climate === \"Queda de neve forte e irregular\") {\n      setImgOneCloud(BlackCloud);\n      setImgTwoCloud(BlackCloud);\n      setImgThreeCloud(BlackCloud);\n      DayOrNight();\n      setstylebackground(\"BackgroundGreyDay\");\n      setRainLevel(levelZeroParticles);\n      setSnowLevel(levelTwoParticles);\n    } else if (climate === \"Neve intensa\") {\n      setImgOneCloud(whiteCloud);\n      setImgTwoCloud(BlackCloud);\n      setImgThreeCloud(whiteCloud);\n      DayOrNight();\n      setstylebackground(\"BackgroundGreyDay\");\n      setRainLevel(levelZeroParticles);\n      setSnowLevel(levelFourParticles);\n    } else if (climate === \"Granizo\" || climate === \"Aguaceiros fracos com granizo\" || climate === \"Aguaceiros moderados ou fortes com granizo\") {\n      setImgOneCloud(BlackCloud);\n      setImgTwoCloud(BlackCloud);\n      setImgThreeCloud(BlackCloud);\n      DayOrNight();\n      setstylebackground(\"BackgroundGreyDay\");\n      setRainLevel(levelOneParticles);\n      setSnowLevel(levelZeroParticles);\n    } else if (climate === \"Chuva fraca irregular com trovoada\" || climate === \"Chuva moderada ou forte com trovoada\") {\n      setImgOneCloud(thunderstormCloud);\n      setImgTwoCloud(BlackCloud);\n      setImgThreeCloud(thunderstormCloud);\n      DayOrNight();\n      setstylebackground(\"BackgroundGreyDay\");\n      setRainLevel(levelThreeParticles);\n      setSnowLevel(levelZeroParticles);\n    } else if (climate === \"Neve fraca irregular com trovoada\" || climate === \"Neve moderada ou forte com trovoada\") {\n      setImgOneCloud(BlackCloud);\n      setImgTwoCloud(thunderstormCloud);\n      setImgThreeCloud(BlackCloud);\n      DayOrNight();\n      setstylebackground(\"BackgroundGreyDay\");\n      setRainLevel(levelZeroParticles);\n      setRainLevel(levelThreeParticles);\n    } else {\n      setImgOneCloud(TranspImg);\n      setImgTwoCloud(TranspImg);\n      setImgThreeCloud(TranspImg);\n      setSnowLevel(levelZeroParticles);\n      setRainLevel(levelZeroParticles);\n      DayOrNight();\n    }\n  }, [climate]);\n  console.log(climate);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Particles, {\n      id: \"tsRainparticles\",\n      init: particlesInit,\n      loaded: particlesLoaded,\n      options: NewRainParticleOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Particles, {\n      id: \"tsSnowparticles\",\n      init: particlesInit,\n      loaded: particlesLoaded,\n      options: NewSnowParticleOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ClimateBackground, \"ViA9ISXP+o8spw+zK+QeVfyz+Ik=\");\n_c = ClimateBackground;\nexport default ClimateBackground;\nvar _c;\n$RefreshReg$(_c, \"ClimateBackground\");","map":{"version":3,"names":["useState","useEffect","useCallback","Particles","loadFull","RainParticleOption","SnowParticleOption","TranspImg","BlackCloud","whiteCloud","thunderstormCloud","Sun","Moon","jsxDEV","_jsxDEV","Fragment","_Fragment","ClimateBackground","_ref","_s","weatherForcast","stylebackground","setstylebackground","isDay","setIsDay","climate","setClimate","imgOneCloud","setImgOneCloud","imgTwoCloud","setImgTwoCloud","imgThreeCloud","setImgThreeCloud","imgSunAndMoon","setImgSunAndMoon","isExecutedDayorNight","setIsExecutedDayorNight","RainParticleOptions","SnowParticleOptions","console","log","levelZeroParticles","levelOneParticles","levelTwoParticles","levelThreeParticles","levelFourParticles","rainLevel","setRainLevel","snowLevel","setSnowLevel","NewRainParticleOptions","Object","assign","particles","number","value","NewSnowParticleOptions","particlesInit","engine","particlesLoaded","container","_weatherForcast$curre","_weatherForcast$curre2","current","condition","text","is_day","DayOrNight","children","id","init","loaded","options","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Projetos/React/Project_Weather_Forecast/climate_app/src/components/ClimateBackground.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nimport { useCallback } from \"react\";\r\nimport Particles from \"react-particles\";\r\nimport { loadFull } from \"tsparticles\";\r\nimport RainParticleOption from \"./RainParticlesOptions.js\";\r\nimport SnowParticleOption from \"./SnowParticlesOptions.js\";\r\n\r\nimport TranspImg from \"../imagens/Fundo_transparente.png\";\r\n\r\nimport BlackCloud from \"../imagens/Nublado.png\";\r\nimport whiteCloud from \"../imagens/Nuvem_Clara.png\"\r\nimport thunderstormCloud from \"../imagens/Nuvem_trovoada.png\"\r\n\r\nimport Sun from \"../imagens/Sol.png\";\r\nimport Moon from \"../imagens/Lua.png\";\r\n\r\nconst ClimateBackground = ({ weatherForcast }) => {\r\n\r\n  const [stylebackground, setstylebackground] = useState(\"BackgroundDefault\")\r\n  const [isDay, setIsDay] = useState(true);\r\n  const [climate, setClimate] = useState(null);\r\n  const [imgOneCloud, setImgOneCloud] = useState(TranspImg)\r\n  const [imgTwoCloud, setImgTwoCloud] = useState(TranspImg)\r\n  const [imgThreeCloud, setImgThreeCloud] = useState(TranspImg)\r\n  const [imgSunAndMoon, setImgSunAndMoon] = useState(TranspImg)\r\n  //passa pelas duas primeiras condições de mudança do fundo caso esteja em false\r\n  const [isExecutedDayorNight, setIsExecutedDayorNight] = useState(false);\r\n  \r\n  const RainParticleOptions = RainParticleOption();\r\n  const SnowParticleOptions = SnowParticleOption();\r\n  \r\n\r\n  console.log(climate)\r\n  //Define as configurações para a produção de partículas\r\n    //níveis de particula\r\n    const levelZeroParticles = 0;\r\n    const levelOneParticles = 100;\r\n    const levelTwoParticles = 300;\r\n    const levelThreeParticles  = 500;\r\n    const levelFourParticles = 700;\r\n\r\n    const [rainLevel, setRainLevel] = useState(levelZeroParticles)\r\n    const [snowLevel, setSnowLevel] = useState(levelZeroParticles)\r\n\r\n    //Define as particulas options de chuva\r\n    const NewRainParticleOptions = Object.assign({}, RainParticleOptions);\r\n    NewRainParticleOptions.particles.number.value = rainLevel\r\n\r\n    const NewSnowParticleOptions = Object.assign({}, SnowParticleOptions);\r\n    NewSnowParticleOptions.particles.number.value = snowLevel\r\n    \r\n    const particlesInit = useCallback(async engine => {\r\n      console.log(engine);\r\n      await loadFull(engine);\r\n    }, []);\r\n  \r\n    const particlesLoaded = useCallback(async container => {\r\n      await console.log(container);\r\n    }, []);\r\n    \r\n  //\r\n\r\n    //set a string do climate\r\n  useEffect(() => {\r\n    setClimate(weatherForcast?.current?.condition?.text)\r\n  }, [weatherForcast]);\r\n\r\n\r\n  //vê se ma região está noite, dia ou null\r\n  useEffect(() => {\r\n    if (weatherForcast && weatherForcast.current.is_day === 0) {\r\n      setIsDay(0);\r\n    } else if (weatherForcast && weatherForcast.current.is_day === 1) {\r\n      setIsDay(1)\r\n    } else {\r\n      setIsDay(2)\r\n    }\r\n\r\n  }, [weatherForcast]);\r\n\r\n  //muda o Background e imagem do sol e da lua\r\n    const DayOrNight = () =>{\r\n    if (isDay === 1 ) {\r\n      setstylebackground(\"BackgroundDay\");\r\n      setImgSunAndMoon(Sun)\r\n    } else if (isDay === 0) {\r\n      setstylebackground(\"BackgroundNight\");\r\n      setImgSunAndMoon(Moon)\r\n    } else {\r\n      setstylebackground(\"BackgroundDefault\");\r\n      setImgSunAndMoon(TranspImg)\r\n    }}\r\n \r\n  //Muda as imagens a quantidade de particua e o fundo dependendo do clima \r\n  useEffect(() => {\r\n    //1\r\n    if (climate === \"Céu limpo\" || climate === \"Sol\") {\r\n      setImgOneCloud(TranspImg);\r\n      setImgTwoCloud(TranspImg);\r\n      setImgThreeCloud(TranspImg);\r\n      DayOrNight();\r\n      setRainLevel(levelZeroParticles);\r\n      setSnowLevel(levelZeroParticles);\r\n      \r\n\r\n    }\r\n    //2\r\n    else if (climate === \"Parcialmente nublado\" || climate === \"Encoberto\") {\r\n      setImgOneCloud(whiteCloud);\r\n      setImgTwoCloud(whiteCloud);\r\n      setImgThreeCloud(whiteCloud);\r\n      DayOrNight();\r\n      setRainLevel(levelZeroParticles)\r\n      setSnowLevel(levelZeroParticles);\r\n    }\r\n    else if (climate === \"Nublado\" || climate === \"Possibilidade de chuva irregular\" || climate === \"Possibilidade de chuva\" || climate === \"Possibilidade de neve irregular\" || climate === \"Possibilidade de neve molhada irregular\" || climate === \"Possibilidade de chuvisco gelado irregular\" || climate === \"Possibilidade de trovoada\") {\r\n\r\n      setImgOneCloud(BlackCloud);\r\n      setImgTwoCloud(BlackCloud);\r\n      setImgThreeCloud(BlackCloud);\r\n      DayOrNight();\r\n      setstylebackground(\"BackgroundGreyDay\");\r\n      setRainLevel(levelZeroParticles);\r\n      setSnowLevel(levelZeroParticles);\r\n      \r\n      \r\n\r\n\r\n\r\n    }\r\n    else if (climate === \"Neblina\" || climate === \"Nevoeiro\" || climate === \"Nevoeiro gelado\" || climate === \"Nevasca\") {\r\n      setImgOneCloud(BlackCloud);\r\n      setImgTwoCloud(TranspImg);\r\n      setImgThreeCloud(whiteCloud);\r\n      DayOrNight();\r\n      setstylebackground(\"BackgroundGreyDay\");\r\n      setRainLevel(levelZeroParticles);\r\n      setSnowLevel(levelZeroParticles);\r\n      \r\n      \r\n    }\r\n    else if (climate === \"Rajadas de vento com neve\"){\r\n      setImgOneCloud(whiteCloud);\r\n      setImgTwoCloud(whiteCloud);\r\n      setImgThreeCloud(whiteCloud);\r\n      DayOrNight();\r\n      setstylebackground(\"BackgroundGreyDay\");\r\n      setRainLevel(levelZeroParticles)\r\n      setSnowLevel(levelOneParticles);\r\n      \r\n    }\r\n    else if (climate === \"Chuvisco irregular\" || climate === \"Chuvisco de chuva irregular\" || climate === \"Chuvisco gelado\" || climate === \"Chuvisco forte gelado\" || climate === \"Chuva fraca irregular\" || climate === \"Chuva fraca\" || climate === \"Períodos de chuva moderadamente\" || climate === \"Chuva fraca e gelada\" || climate === \"Aguaceiros fracos\" || climate === \"Aguaceiros flexíveis\" || climate ===\"Períodos de chuva moderada\") {\r\n      \r\n      setImgOneCloud(BlackCloud);\r\n      setImgTwoCloud(BlackCloud);\r\n      setImgThreeCloud(BlackCloud);\r\n      DayOrNight();\r\n      setstylebackground(\"BackgroundGreyDay\");\r\n      setRainLevel(levelOneParticles)\r\n      setSnowLevel(levelZeroParticles);\r\n      \r\n      \r\n\r\n    }\r\n    else if(climate ===\"Chuvisco forte gelado\"){\r\n      setImgOneCloud(BlackCloud);\r\n      setImgTwoCloud(BlackCloud);\r\n      setImgThreeCloud(BlackCloud);\r\n      DayOrNight();\r\n      setstylebackground(\"BackgroundGreyDay\");\r\n      setRainLevel(levelThreeParticles)\r\n      setSnowLevel(levelZeroParticles);\r\n      \r\n    }\r\n    else if (climate === \"Chuva pesada\" || climate === \"Períodos de chuva forte\" || climate === \"Chuva forte\" || climate === \"Chuva gelada moderada ou forte\" || climate === \"Chuva torrencial\" || climate === \"Aguaceiros moderados ou fortes\") {\r\n\r\n      setImgOneCloud(BlackCloud);\r\n      setImgTwoCloud(BlackCloud);\r\n      setImgThreeCloud(BlackCloud);\r\n      DayOrNight();\r\n      setstylebackground(\"BackgroundGreyDay\");\r\n      setRainLevel(levelFourParticles)\r\n      setSnowLevel(levelZeroParticles);\r\n      \r\n\r\n    }\r\n    else if (climate === \"Chuva fraca com neve\" || climate === \"Aguaceiros fracos com neve\"){\r\n      setImgOneCloud(whiteCloud);\r\n      setImgTwoCloud(BlackCloud);\r\n      setImgThreeCloud(whiteCloud);\r\n      DayOrNight();\r\n      setstylebackground(\"BackgroundGreyDay\");\r\n      setRainLevel(levelOneParticles)\r\n      setSnowLevel(levelOneParticles);\r\n    }\r\n    else if (climate === \"Chuva forte ou moderadamente com neve\" || climate === \"Aguaceiros moderados ou fortes com neve\"){\r\n      setImgOneCloud(BlackCloud);\r\n      setImgTwoCloud(BlackCloud);\r\n      setImgThreeCloud(BlackCloud);\r\n      DayOrNight();\r\n      setstylebackground(\"BackgroundGreyDay\");\r\n      setRainLevel(levelTwoParticles)\r\n      setSnowLevel(levelTwoParticles);\r\n    }\r\n    else if (climate === \"Queda de neve irregular e fraca\" || climate === \"Queda de neve fraca\" || climate === \"Queda de neve moderada e irregular\" || climate === \"Queda de neve moderada\" || climate === \"Queda de neve forte e irregular\") {\r\n\r\n      setImgOneCloud(BlackCloud);\r\n      setImgTwoCloud(BlackCloud);\r\n      setImgThreeCloud(BlackCloud);\r\n      DayOrNight();\r\n      setstylebackground(\"BackgroundGreyDay\");\r\n      setRainLevel(levelZeroParticles)\r\n      setSnowLevel(levelTwoParticles);\r\n      \r\n\r\n    }\r\n    else if (climate === \"Neve intensa\"){\r\n      setImgOneCloud(whiteCloud);\r\n      setImgTwoCloud(BlackCloud);\r\n      setImgThreeCloud(whiteCloud);\r\n      DayOrNight();\r\n      setstylebackground(\"BackgroundGreyDay\");\r\n      setRainLevel(levelZeroParticles)\r\n      setSnowLevel(levelFourParticles);\r\n    }\r\n    else if (climate === \"Granizo\" || climate === \"Aguaceiros fracos com granizo\" || climate === \"Aguaceiros moderados ou fortes com granizo\") {\r\n\r\n      setImgOneCloud(BlackCloud);\r\n      setImgTwoCloud(BlackCloud);\r\n      setImgThreeCloud(BlackCloud);\r\n      DayOrNight();\r\n      setstylebackground(\"BackgroundGreyDay\");\r\n      setRainLevel(levelOneParticles)\r\n      setSnowLevel(levelZeroParticles);\r\n\r\n    }\r\n    else if(climate === \"Chuva fraca irregular com trovoada\" || climate ===\"Chuva moderada ou forte com trovoada\"){\r\n      setImgOneCloud(thunderstormCloud);\r\n      setImgTwoCloud(BlackCloud);\r\n      setImgThreeCloud(thunderstormCloud);\r\n      DayOrNight();\r\n      setstylebackground(\"BackgroundGreyDay\");\r\n      setRainLevel(levelThreeParticles)\r\n      setSnowLevel(levelZeroParticles)\r\n      \r\n    }\r\n    else if(climate === \"Neve fraca irregular com trovoada\" || climate ===\"Neve moderada ou forte com trovoada\"){\r\n      setImgOneCloud(BlackCloud);\r\n      setImgTwoCloud(thunderstormCloud);\r\n      setImgThreeCloud(BlackCloud);\r\n      DayOrNight();\r\n      setstylebackground(\"BackgroundGreyDay\");\r\n      setRainLevel(levelZeroParticles);\r\n      setRainLevel(levelThreeParticles)\r\n    }\r\n    else {\r\n      setImgOneCloud(TranspImg);\r\n      setImgTwoCloud(TranspImg);\r\n      setImgThreeCloud(TranspImg);\r\n      setSnowLevel(levelZeroParticles);\r\n      setRainLevel(levelZeroParticles);\r\n      DayOrNight();\r\n      \r\n\r\n    }\r\n\r\n\r\n\r\n  }, [climate]);\r\n\r\n  console.log(climate)\r\n  return (\r\n    <>\r\n\r\n      <Particles\r\n                id=\"tsRainparticles\"\r\n                init={particlesInit}\r\n                loaded={particlesLoaded}\r\n                options={NewRainParticleOptions}\r\n      />\r\n      <Particles\r\n                id=\"tsSnowparticles\"\r\n                init={particlesInit}\r\n                loaded={particlesLoaded}\r\n                options={NewSnowParticleOptions}\r\n      />\r\n            \r\n         \r\n\r\n      \r\n    </>\r\n\r\n  )\r\n}\r\nexport default ClimateBackground;\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}