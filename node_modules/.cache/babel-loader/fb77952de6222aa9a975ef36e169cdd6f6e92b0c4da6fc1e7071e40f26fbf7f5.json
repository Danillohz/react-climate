{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projetos\\\\React\\\\Project_Weather_Forecast\\\\climate_app\\\\src\\\\components\\\\ClimateBackground.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useCallback } from \"react\";\nimport Particles from \"react-particles\";\nimport { loadFull } from \"tsparticles\";\nimport RainParticleOptions from \"./RainParticlesOptions.js\";\nimport SnowParticleOption from \"./SnowParticlesOptions.js\";\nimport TranspImg from \"../imagens/Fundo_transparente.png\";\nimport BlackCloud from \"../imagens/Nublado.png\";\nimport whiteCloud from \"../imagens/Nuvem_Clara.png\";\nimport thunderstormCloud from \"../imagens/Nuvem_trovoada.png\";\nimport Sun from \"../imagens/Sol.png\";\nimport Moon from \"../imagens/Lua.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet particleOptions = RainParticleOptions();\nconst ClimateBackground = _ref => {\n  _s();\n  let {\n    weatherForcast\n  } = _ref;\n  const [stylebackground, setstylebackground] = useState(\"BackgroundDefault\");\n  const [isDay, setIsDay] = useState(true);\n  const [climate, setClimate] = useState(null);\n  const [imgOneCloud, setImgOneCloud] = useState(TranspImg);\n  const [imgTwoCloud, setImgTwoCloud] = useState(TranspImg);\n  const [imgThreeCloud, setImgThreeCloud] = useState(TranspImg);\n  const [imgSunAndMoon, setImgSunAndMoon] = useState(TranspImg);\n  const [isExecutedDayorNight, setIsExecutedDayorNight] = useState(false);\n  console.log(climate);\n  //Define as configurações para a produção de partículas\n\n  //níveis de particula\n  const ZeroParticles = 0;\n  const OneParticles = 250;\n  const TwoParticles = 500;\n  const ThreeParticles = 750;\n  const [rain, setRain] = useState(ZeroParticles);\n  const particlesInit = useCallback(async engine => {\n    console.log(engine);\n    await loadFull(engine);\n  }, []);\n  const particlesLoaded = useCallback(async container => {\n    await console.log(container);\n  }, []);\n\n  //set a string do climate\n  useEffect(() => {\n    var _weatherForcast$curre, _weatherForcast$curre2;\n    setClimate(weatherForcast === null || weatherForcast === void 0 ? void 0 : (_weatherForcast$curre = weatherForcast.current) === null || _weatherForcast$curre === void 0 ? void 0 : (_weatherForcast$curre2 = _weatherForcast$curre.condition) === null || _weatherForcast$curre2 === void 0 ? void 0 : _weatherForcast$curre2.text);\n  }, [weatherForcast]);\n\n  //vê se ma região está noite, dia ou null\n  useEffect(() => {\n    if (weatherForcast && weatherForcast.current.is_day === 0) {\n      setIsDay(0);\n    } else if (weatherForcast && weatherForcast.current.is_day === 1) {\n      setIsDay(1);\n    } else {\n      setIsDay(2);\n    }\n  }, [weatherForcast]);\n\n  //muda o Background e imagem do sol e da lua\n  const DayOrNight = () => {\n    if (isDay === 1) {\n      setstylebackground(\"BackgroundDay\");\n      setImgSunAndMoon(Sun);\n    } else if (isDay === 0) {\n      setstylebackground(\"BackgroundNight\");\n      setImgSunAndMoon(Moon);\n    } else {\n      setstylebackground(\"BackgroundDefault\");\n      setImgSunAndMoon(TranspImg);\n    }\n  };\n\n  //Muda as imagens a quantidade de particua e o fundo dependendo do clima \n  useEffect(() => {\n    if (!isExecutedDayorNight && (climate === \"Céu limpo\" || climate === \"Sol\")) {\n      setImgOneCloud(TranspImg);\n      setImgTwoCloud(TranspImg);\n      setImgThreeCloud(TranspImg);\n      setRain(ZeroParticles);\n      DayOrNight();\n      setIsExecutedDayorNight(true);\n    } else if (!isExecutedDayorNight && (climate === \"Parcialmente nublado\" || climate === \"Encoberto\")) {\n      setImgOneCloud(whiteCloud);\n      setImgTwoCloud(TranspImg);\n      setImgThreeCloud(whiteCloud);\n      setRain(ZeroParticles);\n      DayOrNight();\n      setIsExecutedDayorNight(true);\n    } else if (climate === \"Nublado\" || climate === \"Possibilidade de chuva irregular\" || climate === \"Possibilidade de chuva\" || climate === \"Possibilidade de neve irregular\" || climate === \"Possibilidade de neve molhada irregular\" || climate === \"Possibilidade de chuvisco gelado irregular\" || climate === \"Possibilidade de trovoada\") {\n      setImgOneCloud(BlackCloud);\n      setImgTwoCloud(BlackCloud);\n      setImgThreeCloud(BlackCloud);\n      setIsExecutedDayorNight(false);\n      setstylebackground(\"BackgroundGreyDay\");\n      setRain(ZeroParticles);\n    } else if (climate === \"Neblina\" || climate === \"Nevoeiro\" || climate === \"Nevoeiro gelado\" || climate === \"Nevasca\") {\n      setImgOneCloud(BlackCloud);\n      setImgTwoCloud(TranspImg);\n      setImgThreeCloud(whiteCloud);\n      setIsExecutedDayorNight(false);\n      setstylebackground(\"BackgroundGreyDay\");\n      setRain(ZeroParticles);\n    } else if (climate === \"Rajadas de vento com neve\") {\n      setImgOneCloud(whiteCloud);\n      setImgTwoCloud(whiteCloud);\n      setImgThreeCloud(whiteCloud);\n      setIsExecutedDayorNight(false);\n      setstylebackground(\"BackgroundGreyDay\");\n      setRain(ZeroParticles);\n    } else if (climate === \"Chuvisco irregular\" || climate === \"Chuvisco de chuva irregular\" || climate === \"Chuvisco gelado\" || climate === \"Chuvisco forte gelado\" || climate === \"Chuva fraca irregular\" || climate === \"Chuva fraca\" || climate === \"Períodos de chuva moderadamente\" || climate === \"Chuva fraca e gelada\" || climate === \"Aguaceiros fracos\" || climate === \"Aguaceiros flexíveis\" || climate === \"Períodos de chuva moderada\") {\n      setImgOneCloud(BlackCloud);\n      setImgTwoCloud(BlackCloud);\n      setImgThreeCloud(BlackCloud);\n      setIsExecutedDayorNight(false);\n      setstylebackground(\"BackgroundGreyDay\");\n      setRain(OneParticles);\n    } else if (climate === \"Chuvisco forte gelado\") {\n      setImgOneCloud(BlackCloud);\n      setImgTwoCloud(BlackCloud);\n      setImgThreeCloud(BlackCloud);\n      setIsExecutedDayorNight(false);\n      setstylebackground(\"BackgroundGreyDay\");\n      setRain(TwoParticles);\n    } else if (climate === \"Chuva pesada\" || climate === \"Períodos de chuva forte\" || climate === \"Chuva forte\" || climate === \"Chuva gelada moderada ou forte\" || climate === \"Chuva torrencial\" || climate === \"Aguaceiros moderados ou fortes\") {\n      setImgOneCloud(BlackCloud);\n      setImgTwoCloud(BlackCloud);\n      setImgThreeCloud(BlackCloud);\n      setIsExecutedDayorNight(false);\n      setstylebackground(\"BackgroundGreyDay\");\n      setRain(ThreeParticles);\n    } else if (climate === \"Chuva fraca com neve\" || climate === \"Aguaceiros fracos com neve\") {\n      setImgOneCloud(whiteCloud);\n      setImgTwoCloud(BlackCloud);\n      setImgThreeCloud(whiteCloud);\n      setIsExecutedDayorNight(false);\n      setstylebackground(\"BackgroundGreyDay\");\n      setRain(OneParticles);\n    } else if (climate === \"Chuva forte ou moderadamente com neve\" || climate === \"Aguaceiros moderados ou fortes com neve\") {\n      setImgOneCloud(BlackCloud);\n      setImgTwoCloud(BlackCloud);\n      setImgThreeCloud(BlackCloud);\n      setIsExecutedDayorNight(false);\n      setstylebackground(\"BackgroundGreyDay\");\n      setRain(TwoParticles);\n    } else if (climate === \"Queda de neve irregular e fraca\" || climate === \"Queda de neve fraca\" || climate === \"Queda de neve moderada e irregular\" || climate === \"Queda de neve moderada\" || climate === \"Queda de neve forte e irregular\") {\n      setImgOneCloud(BlackCloud);\n      setImgTwoCloud(BlackCloud);\n      setImgThreeCloud(BlackCloud);\n      setIsExecutedDayorNight(false);\n      setstylebackground(\"BackgroundGreyDay\");\n      setRain(ZeroParticles);\n    } else if (climate === \"Neve intensa\") {\n      setImgOneCloud(whiteCloud);\n      setImgTwoCloud(BlackCloud);\n      setImgThreeCloud(whiteCloud);\n      setIsExecutedDayorNight(false);\n      setstylebackground(\"BackgroundGreyDay\");\n      setRain(ZeroParticles);\n    } else if (climate === \"Granizo\" || climate === \"Aguaceiros fracos com granizo\" || climate === \"Aguaceiros moderados ou fortes com granizo\") {\n      setImgOneCloud(BlackCloud);\n      setImgTwoCloud(BlackCloud);\n      setImgThreeCloud(BlackCloud);\n      setIsExecutedDayorNight(false);\n      setstylebackground(\"BackgroundGreyDay\");\n      setRain(OneParticles);\n    } else if (climate === \"Chuva fraca irregular com trovoada\" || climate === \"Chuva moderada ou forte com trovoada\") {\n      setImgOneCloud(thunderstormCloud);\n      setImgTwoCloud(BlackCloud);\n      setImgThreeCloud(thunderstormCloud);\n      setIsExecutedDayorNight(false);\n      setstylebackground(\"BackgroundGreyDay\");\n      setRain(TwoParticles);\n    } else if (climate === \"Neve fraca irregular com trovoada\" || climate === \"Neve moderada ou forte com trovoada\") {\n      setImgOneCloud(BlackCloud);\n      setImgTwoCloud(thunderstormCloud);\n      setImgThreeCloud(BlackCloud);\n      setIsExecutedDayorNight(false);\n      setstylebackground(\"BackgroundGreyDay\");\n      setRain(ZeroParticles);\n    } else {\n      setImgOneCloud(TranspImg);\n      setImgTwoCloud(TranspImg);\n      setImgThreeCloud(TranspImg);\n      setRain(ZeroParticles);\n      setIsExecutedDayorNight(false);\n    }\n  }, [climate]);\n\n  //altera as particulas options\n  const NewParticleOptions = Object.assign({}, particleOptions);\n  NewParticleOptions.particles.number.value = rain;\n  console.log(climate);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Particles, {\n      id: \"tsparticles\",\n      init: particlesInit,\n      loaded: particlesLoaded,\n      options: NewParticleOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: stylebackground,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"OneCloud\",\n        src: imgOneCloud,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"TwoCloud\",\n        src: imgTwoCloud,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"ThreeCloud\",\n        src: imgThreeCloud,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"SunAndMoon\",\n        src: imgSunAndMoon,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ClimateBackground, \"8ZLgYwNbLugw8+93SXeNvzS2eGs=\");\n_c = ClimateBackground;\nexport default ClimateBackground;\nvar _c;\n$RefreshReg$(_c, \"ClimateBackground\");","map":{"version":3,"names":["useState","useEffect","useCallback","Particles","loadFull","RainParticleOptions","SnowParticleOption","TranspImg","BlackCloud","whiteCloud","thunderstormCloud","Sun","Moon","jsxDEV","_jsxDEV","Fragment","_Fragment","particleOptions","ClimateBackground","_ref","_s","weatherForcast","stylebackground","setstylebackground","isDay","setIsDay","climate","setClimate","imgOneCloud","setImgOneCloud","imgTwoCloud","setImgTwoCloud","imgThreeCloud","setImgThreeCloud","imgSunAndMoon","setImgSunAndMoon","isExecutedDayorNight","setIsExecutedDayorNight","console","log","ZeroParticles","OneParticles","TwoParticles","ThreeParticles","rain","setRain","particlesInit","engine","particlesLoaded","container","_weatherForcast$curre","_weatherForcast$curre2","current","condition","text","is_day","DayOrNight","NewParticleOptions","Object","assign","particles","number","value","children","id","init","loaded","options","fileName","_jsxFileName","lineNumber","columnNumber","className","src","alt","_c","$RefreshReg$"],"sources":["C:/Projetos/React/Project_Weather_Forecast/climate_app/src/components/ClimateBackground.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nimport { useCallback } from \"react\";\r\nimport Particles from \"react-particles\";\r\nimport { loadFull } from \"tsparticles\";\r\nimport RainParticleOptions from \"./RainParticlesOptions.js\";\r\nimport SnowParticleOption from \"./SnowParticlesOptions.js\";\r\n\r\nimport TranspImg from \"../imagens/Fundo_transparente.png\";\r\n\r\nimport BlackCloud from \"../imagens/Nublado.png\";\r\nimport whiteCloud from \"../imagens/Nuvem_Clara.png\"\r\nimport thunderstormCloud from \"../imagens/Nuvem_trovoada.png\"\r\n\r\nimport Sun from \"../imagens/Sol.png\";\r\nimport Moon from \"../imagens/Lua.png\";\r\n\r\nlet particleOptions = RainParticleOptions();\r\n\r\nconst ClimateBackground = ({ weatherForcast }) => {\r\n\r\n  const [stylebackground, setstylebackground] = useState(\"BackgroundDefault\")\r\n  const [isDay, setIsDay] = useState(true);\r\n  const [climate, setClimate] = useState(null);\r\n  const [imgOneCloud, setImgOneCloud] = useState(TranspImg)\r\n  const [imgTwoCloud, setImgTwoCloud] = useState(TranspImg)\r\n  const [imgThreeCloud, setImgThreeCloud] = useState(TranspImg)\r\n  const [imgSunAndMoon, setImgSunAndMoon] = useState(TranspImg)\r\n  const [isExecutedDayorNight, setIsExecutedDayorNight] = useState(false);\r\n  \r\n  \r\n  \r\n\r\n  console.log(climate)\r\n  //Define as configurações para a produção de partículas\r\n    \r\n\r\n    //níveis de particula\r\n    const ZeroParticles = 0;\r\n    const OneParticles = 250;\r\n    const TwoParticles = 500;\r\n    const ThreeParticles = 750;\r\n\r\n    const [rain, setRain] = useState(ZeroParticles)\r\n  \r\n    const particlesInit = useCallback(async engine => {\r\n      console.log(engine);\r\n      await loadFull(engine);\r\n    }, []);\r\n  \r\n    const particlesLoaded = useCallback(async container => {\r\n      await console.log(container);\r\n    }, []);\r\n\r\n    //set a string do climate\r\n  useEffect(() => {\r\n    setClimate(weatherForcast?.current?.condition?.text)\r\n  }, [weatherForcast]);\r\n\r\n\r\n  //vê se ma região está noite, dia ou null\r\n  useEffect(() => {\r\n    if (weatherForcast && weatherForcast.current.is_day === 0) {\r\n      setIsDay(0);\r\n    } else if (weatherForcast && weatherForcast.current.is_day === 1) {\r\n      setIsDay(1)\r\n    } else {\r\n      setIsDay(2)\r\n    }\r\n\r\n  }, [weatherForcast]);\r\n\r\n  //muda o Background e imagem do sol e da lua\r\n    const DayOrNight = () =>{\r\n    if (isDay === 1 ) {\r\n      setstylebackground(\"BackgroundDay\");\r\n      setImgSunAndMoon(Sun)\r\n    } else if (isDay === 0) {\r\n      setstylebackground(\"BackgroundNight\");\r\n      setImgSunAndMoon(Moon)\r\n    } else {\r\n      setstylebackground(\"BackgroundDefault\");\r\n      setImgSunAndMoon(TranspImg)\r\n    }}\r\n \r\n  //Muda as imagens a quantidade de particua e o fundo dependendo do clima \r\n  useEffect(() => {\r\n    if (!isExecutedDayorNight && (climate === \"Céu limpo\" || climate === \"Sol\")) {\r\n      setImgOneCloud(TranspImg);\r\n      setImgTwoCloud(TranspImg);\r\n      setImgThreeCloud(TranspImg);\r\n      setRain(ZeroParticles)\r\n      DayOrNight();\r\n      setIsExecutedDayorNight(true);\r\n      \r\n\r\n    }\r\n    else if (!isExecutedDayorNight && (climate === \"Parcialmente nublado\" || climate === \"Encoberto\")) {\r\n      setImgOneCloud(whiteCloud);\r\n      setImgTwoCloud(TranspImg);\r\n      setImgThreeCloud(whiteCloud);\r\n      setRain(ZeroParticles)\r\n      DayOrNight();\r\n      setIsExecutedDayorNight(true);\r\n    }\r\n    else if (climate === \"Nublado\" || climate === \"Possibilidade de chuva irregular\" || climate === \"Possibilidade de chuva\" || climate === \"Possibilidade de neve irregular\" || climate === \"Possibilidade de neve molhada irregular\" || climate === \"Possibilidade de chuvisco gelado irregular\" || climate === \"Possibilidade de trovoada\") {\r\n\r\n      setImgOneCloud(BlackCloud);\r\n      setImgTwoCloud(BlackCloud);\r\n      setImgThreeCloud(BlackCloud);\r\n      setIsExecutedDayorNight(false);\r\n      setstylebackground(\"BackgroundGreyDay\");\r\n      setRain(ZeroParticles)\r\n      \r\n\r\n\r\n\r\n    }\r\n    else if (climate === \"Neblina\" || climate === \"Nevoeiro\" || climate === \"Nevoeiro gelado\" || climate === \"Nevasca\") {\r\n      setImgOneCloud(BlackCloud);\r\n      setImgTwoCloud(TranspImg);\r\n      setImgThreeCloud(whiteCloud);\r\n      setIsExecutedDayorNight(false);\r\n      setstylebackground(\"BackgroundGreyDay\");\r\n      setRain(ZeroParticles)\r\n      \r\n      \r\n    }\r\n    else if (climate === \"Rajadas de vento com neve\"){\r\n      setImgOneCloud(whiteCloud);\r\n      setImgTwoCloud(whiteCloud);\r\n      setImgThreeCloud(whiteCloud);\r\n      setIsExecutedDayorNight(false);\r\n      setstylebackground(\"BackgroundGreyDay\");\r\n      setRain(ZeroParticles)\r\n      \r\n    }\r\n    else if (climate === \"Chuvisco irregular\" || climate === \"Chuvisco de chuva irregular\" || climate === \"Chuvisco gelado\" || climate === \"Chuvisco forte gelado\" || climate === \"Chuva fraca irregular\" || climate === \"Chuva fraca\" || climate === \"Períodos de chuva moderadamente\" || climate === \"Chuva fraca e gelada\" || climate === \"Aguaceiros fracos\" || climate === \"Aguaceiros flexíveis\" || climate ===\"Períodos de chuva moderada\") {\r\n     \r\n      setImgOneCloud(BlackCloud);\r\n      setImgTwoCloud(BlackCloud);\r\n      setImgThreeCloud(BlackCloud);\r\n      setIsExecutedDayorNight(false);\r\n      setstylebackground(\"BackgroundGreyDay\");\r\n      setRain(OneParticles)\r\n      \r\n\r\n    }\r\n    else if(climate ===\"Chuvisco forte gelado\"){\r\n      \r\n      setImgOneCloud(BlackCloud);\r\n      setImgTwoCloud(BlackCloud);\r\n      setImgThreeCloud(BlackCloud);\r\n      setIsExecutedDayorNight(false);\r\n      setstylebackground(\"BackgroundGreyDay\");\r\n      setRain(TwoParticles)\r\n      \r\n    }\r\n    else if (climate === \"Chuva pesada\" || climate === \"Períodos de chuva forte\" || climate === \"Chuva forte\" || climate === \"Chuva gelada moderada ou forte\" || climate === \"Chuva torrencial\" || climate === \"Aguaceiros moderados ou fortes\") {\r\n      \r\n      setImgOneCloud(BlackCloud);\r\n      setImgTwoCloud(BlackCloud);\r\n      setImgThreeCloud(BlackCloud);\r\n      setIsExecutedDayorNight(false);\r\n      setstylebackground(\"BackgroundGreyDay\");\r\n      setRain(ThreeParticles)\r\n      \r\n\r\n    }\r\n    else if (climate === \"Chuva fraca com neve\" || climate === \"Aguaceiros fracos com neve\"){\r\n      \r\n      setImgOneCloud(whiteCloud);\r\n      setImgTwoCloud(BlackCloud);\r\n      setImgThreeCloud(whiteCloud);\r\n      setIsExecutedDayorNight(false);\r\n      setstylebackground(\"BackgroundGreyDay\");\r\n      setRain(OneParticles)\r\n    }\r\n    else if (climate === \"Chuva forte ou moderadamente com neve\" || climate === \"Aguaceiros moderados ou fortes com neve\"){\r\n      \r\n      setImgOneCloud(BlackCloud);\r\n      setImgTwoCloud(BlackCloud);\r\n      setImgThreeCloud(BlackCloud);\r\n      setIsExecutedDayorNight(false);\r\n      setstylebackground(\"BackgroundGreyDay\");\r\n      setRain(TwoParticles)\r\n    }\r\n    else if (climate === \"Queda de neve irregular e fraca\" || climate === \"Queda de neve fraca\" || climate === \"Queda de neve moderada e irregular\" || climate === \"Queda de neve moderada\" || climate === \"Queda de neve forte e irregular\") {\r\n      \r\n      setImgOneCloud(BlackCloud);\r\n      setImgTwoCloud(BlackCloud);\r\n      setImgThreeCloud(BlackCloud);\r\n      setIsExecutedDayorNight(false);\r\n      setstylebackground(\"BackgroundGreyDay\");\r\n      setRain(ZeroParticles)\r\n\r\n    }\r\n    else if (climate === \"Neve intensa\"){\r\n      \r\n      setImgOneCloud(whiteCloud);\r\n      setImgTwoCloud(BlackCloud);\r\n      setImgThreeCloud(whiteCloud);\r\n      setIsExecutedDayorNight(false);\r\n      setstylebackground(\"BackgroundGreyDay\");\r\n      setRain(ZeroParticles)\r\n    }\r\n    else if (climate === \"Granizo\" || climate === \"Aguaceiros fracos com granizo\" || climate === \"Aguaceiros moderados ou fortes com granizo\") {\r\n      \r\n      setImgOneCloud(BlackCloud);\r\n      setImgTwoCloud(BlackCloud);\r\n      setImgThreeCloud(BlackCloud);\r\n      setIsExecutedDayorNight(false);\r\n      setstylebackground(\"BackgroundGreyDay\");\r\n      setRain(OneParticles)\r\n\r\n    }\r\n    else if(climate === \"Chuva fraca irregular com trovoada\" || climate ===\"Chuva moderada ou forte com trovoada\"){\r\n      \r\n      setImgOneCloud(thunderstormCloud);\r\n      setImgTwoCloud(BlackCloud);\r\n      setImgThreeCloud(thunderstormCloud);\r\n      setIsExecutedDayorNight(false);\r\n      setstylebackground(\"BackgroundGreyDay\");\r\n      setRain(TwoParticles)\r\n    }\r\n    else if(climate === \"Neve fraca irregular com trovoada\" || climate ===\"Neve moderada ou forte com trovoada\"){\r\n      \r\n      setImgOneCloud(BlackCloud);\r\n      setImgTwoCloud(thunderstormCloud);\r\n      setImgThreeCloud(BlackCloud);\r\n      setIsExecutedDayorNight(false);\r\n      setstylebackground(\"BackgroundGreyDay\");\r\n      setRain(ZeroParticles)\r\n    }\r\n    else {\r\n      \r\n      setImgOneCloud(TranspImg);\r\n      setImgTwoCloud(TranspImg);\r\n      setImgThreeCloud(TranspImg);\r\n      setRain(ZeroParticles)\r\n      setIsExecutedDayorNight(false);\r\n      \r\n\r\n    }\r\n\r\n  }, [climate]);\r\n\r\n  //altera as particulas options\r\n  const NewParticleOptions = Object.assign({}, particleOptions);\r\n  NewParticleOptions.particles.number.value = rain\r\n\r\n  console.log(climate)\r\n  return (\r\n    <>\r\n         <Particles\r\n                id=\"tsparticles\"\r\n                init={particlesInit}\r\n                loaded={particlesLoaded}\r\n                options={NewParticleOptions}\r\n            />\r\n\r\n      <div className={stylebackground}>\r\n\r\n        <img className=\"OneCloud\" src={imgOneCloud} alt=\"\" />\r\n        <img className=\"TwoCloud\" src={imgTwoCloud} alt=\"\" />\r\n        <img className=\"ThreeCloud\" src={imgThreeCloud} alt=\"\" />\r\n        <img className=\"SunAndMoon\" src={imgSunAndMoon} alt=\"\" />\r\n      </div>\r\n    </>\r\n\r\n  )\r\n}\r\nexport default ClimateBackground;\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}